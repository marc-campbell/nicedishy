name: build-test-release

on:
  push:
    branches:
      - "main"

jobs:
  build:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: '^1.16.8'

      - name: setup env
        run: |
          echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
        shell: bash

      - id: go-cache-paths
        run: |
          echo "::set-output name=go-build::$(go env GOCACHE)"
          echo "::set-output name=go-mod::$(go env GOMODCACHE)"
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: ${{ steps.go-cache-paths.outputs.go-build }}
          key: ${{ runner.os }}-go-build-${{ hashFiles('**/go.sum') }}
      - uses: actions/cache@v3
        with:
          path: ${{ steps.go-cache-paths.outputs.go-mod }}
          key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}


      - run: make test
      - run: make build

      - uses: actions/upload-artifact@v3
        with:
          name: nicedishy-api
          path: ./bin/nicedishy-api
      - uses: actions/upload-artifact@v3
        with:
          name: grafana-proxy
          path: ./bin/grafana-proxy

  release:
    runs-on: ubuntu-18.04
    needs: [build]
    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - uses: actions/download-artifact@v3
        with:
          name: nicedishy-api
          path: ./bin
      - run: chmod a+x ./bin/nicedishy-api
      - uses: actions/download-artifact@v3
        with:
          name: grafana-proxy
          path: ./bin
      - run: chmod a+x ./bin/grafana-proxy

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - uses: docker/login-action@v1.14.1
        name: log in to docker registry
        with:
          registry: ghcr.io
          username: nicedishy
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get the version
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Build api image
        uses: docker/build-push-action@v3.0.0
        with:
          context: .
          tags: ghcr.io/marc-campbell/nicedishy/nicedishy-api:${{ steps.vars.outputs.sha_short }}
          file: ./deploy/Dockerfile.api
          push: true

      - name: Render kustomization image tags
        env:
          VERSION: ${{ steps.vars.outputs.sha_short }}
        run: sed -i "s/NEW_TAG/$VERSION/g" kustomize/overlays/production/kustomization.yaml

      - name: kustomize build it all
        uses: karancode/kustomize-github-action@master
        with:
          kustomize_version: '4.1.0'
          kustomize_build_dir: './kustomize/overlays/production'
          kustomize_comment: true
          kustomize_output_file: "gitops-rendered.yaml"

      - name: upload rendered yaml
        uses: actions/upload-artifact@v3
        with:
          name: gitops-rendered.yaml
          path: gitops-rendered.yaml

      - run: |
          mkdir -p ./gitops
      - name: Split the rendered doc
        uses: marccampbell/yaml-toolbox/action/split@master
        with:
          path: ./gitops-rendered.yaml
          out: ./gitops

      - name: gitops-commit
        run: |
          git config --global user.email "deploy@nicedishy.com"
          git config --global user.name "NiceDishy Bot"
          cd gitops && git add . && git commit --allow-empty -m "Deploy from ${GITHUB_REF}"
          git push origin main

